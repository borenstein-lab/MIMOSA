// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// timesTwo
NumericVector timesTwo(NumericVector x);
RcppExport SEXP _mimosa_timesTwo(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(timesTwo(x));
    return rcpp_result_gen;
END_RCPP
}
// randomShuffle
Rcpp::NumericVector randomShuffle(Rcpp::NumericVector a);
RcppExport SEXP _mimosa_randomShuffle(SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(randomShuffle(a));
    return rcpp_result_gen;
END_RCPP
}
// make_perm_mat
NumericMatrix make_perm_mat(double nSamples, double nPerm);
RcppExport SEXP _mimosa_make_perm_mat(SEXP nSamplesSEXP, SEXP nPermSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type nSamples(nSamplesSEXP);
    Rcpp::traits::input_parameter< double >::type nPerm(nPermSEXP);
    rcpp_result_gen = Rcpp::wrap(make_perm_mat(nSamples, nPerm));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mimosa_timesTwo", (DL_FUNC) &_mimosa_timesTwo, 1},
    {"_mimosa_randomShuffle", (DL_FUNC) &_mimosa_randomShuffle, 1},
    {"_mimosa_make_perm_mat", (DL_FUNC) &_mimosa_make_perm_mat, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_mimosa(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
